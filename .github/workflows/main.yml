name: Deploy Node.js Application

on:
  push:
    branches:
      - main  # Change this to your deployment branch if different

jobs:
  build-node: 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'
      - run: node --version
      - run: npm --version
      - run: npm install
      # - run: node main.js &
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      - run: docker build -t chandrahas17/CICD .
      - run: docker tag chandrahas17/CICD chandrahas17/CICD:latest
      - run: docker push chandrahas17/CICD:latest
      - run: docker run -d -p 8000:8000 chandrahas17/CICD
      - name: Wait for server to start
        run: |
          sleep 100
          curl -v http://localhost:8000
      # - run: node main.js &



# -----------------------------------------------------
# jobs:
#   build-node: 
#     runs-on: ubuntu-latest
#     container: node:16
#     steps:
#       - run: node --version
#       - run: npm --version
#       - uses: actions/checkout@v4
#       - run: npm install
#       - run: node main.js

# -----------------------------------------------------

  # build:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4

  #   - name: Set up Node.js
  #     uses: actions/setup-node@v4
  #     with:
  #       node-version: '18'

  #   - name: Install dependencies
  #     run: npm install

    # - name: Run tests
    #   run: npm test

    # - name: Build project
    #   run: npm run build

    # - name: Deploy to Server
    #   env:
    #     SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
    #     SERVER_USERNAME: ${{ secrets.SERVER_USERNAME }}
    #     SERVER_HOST: ${{ secrets.SERVER_HOST }}
    #     SERVER_PATH: ${{ secrets.SERVER_PATH }}
    #   run: |
    #     echo "$SSH_PRIVATE_KEY" | ssh-add -
    #     ssh -o StrictHostKeyChecking=no $SERVER_USERNAME@$SERVER_HOST "mkdir -p $SERVER_PATH"
    #     rsync -avz --delete-after ./ $SERVER_USERNAME@$SERVER_HOST:$SERVER_PATH
